{"ast":null,"code":"import RestAPI from \"../rest\";\nconst initial = [{\n  id: 10,\n  name: \"Brian\",\n  manager_id: 100,\n  is_manager: false,\n  email: \"brian@a.com\"\n}, {\n  id: 11,\n  name: \"Scott\",\n  manager_id: 100,\n  is_manager: false,\n  email: \"scott@a.com\"\n}, {\n  id: 12,\n  name: \"Jeff\",\n  manager_id: 101,\n  is_manager: false,\n  email: \"jeff@a.com\"\n}];\n\nconst users = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let data = arguments.length > 2 ? arguments[2] : undefined;\n\n  switch (action.type) {\n    case \"ADD_USER\":\n      {\n        console.log(\"in reducer user.ADD_USER\");\n        let otherusers = state.filter(user => {\n          if (user.id === action.user.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        let newstate = [...otherusers, Object.assign({}, action.user)];\n        console.log(\"in reducer user.ADD_USER, newstate: \" + JSON.stringify(newstate));\n        return newstate;\n      }\n\n    case \"DELETE_USER\":\n      {\n        console.log(\"in reducer users.DELETE_USER\");\n        let otherusers = state.filter(user => {\n          if (user.id === action.user.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        let newstate = [...otherusers];\n        console.log(\"in reducer users.DELETE_USER, newstate: \" + JSON.stringify(newstate));\n        return newstate;\n      }\n\n    case \"APPLY_USERS_UPDATE\":\n      {\n        console.log(\"in reducer users.APPLY_USERS_UPDATE\", action.users);\n        let newstate = [...action.users];\n        return newstate;\n      }\n\n    case \"GET_USERS\":\n      {\n        console.log(\"in reducer users.GET_USERS\", state);\n        new RestAPI().getUsers(action.dispatch);\n        return state;\n      }\n\n    default:\n      console.log(\"in reducer user.default\");\n      return state;\n  }\n};\n\nexport default users;","map":{"version":3,"names":["RestAPI","initial","id","name","manager_id","is_manager","email","users","state","action","data","type","console","log","otherusers","filter","user","newstate","Object","assign","JSON","stringify","getUsers","dispatch"],"sources":["/home/wasadmin/Hackathon/client/src/reducers/users.js"],"sourcesContent":["import RestAPI from \"../rest\";\n\nconst initial = [\n  {\n    id: 10,\n    name: \"Brian\",\n    manager_id: 100,\n    is_manager: false,\n    email: \"brian@a.com\",\n  },\n  {\n    id: 11,\n    name: \"Scott\",\n    manager_id: 100,\n    is_manager: false,\n    email: \"scott@a.com\",\n  },\n  {\n    id: 12,\n    name: \"Jeff\",\n    manager_id: 101,\n    is_manager: false,\n    email: \"jeff@a.com\",\n  },\n];\n\nconst users = (state = initial, action, data) => {\n  switch (action.type) {\n    case \"ADD_USER\": {\n      console.log(\"in reducer user.ADD_USER\");\n      let otherusers = state.filter((user) => {\n        if (user.id === action.user.id) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n      let newstate = [...otherusers, Object.assign({}, action.user)];\n      console.log(\n        \"in reducer user.ADD_USER, newstate: \" + JSON.stringify(newstate)\n      );\n      return newstate;\n    }\n\n    case \"DELETE_USER\": {\n      console.log(\"in reducer users.DELETE_USER\");\n      let otherusers = state.filter((user) => {\n        if (user.id === action.user.id) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n      let newstate = [...otherusers];\n      console.log(\n        \"in reducer users.DELETE_USER, newstate: \" + JSON.stringify(newstate)\n      );\n      return newstate;\n    }\n\n    case \"APPLY_USERS_UPDATE\": {\n      console.log(\"in reducer users.APPLY_USERS_UPDATE\", action.users);\n      let newstate = [...action.users];\n      return newstate;\n    }\n\n    case \"GET_USERS\": {\n      console.log(\"in reducer users.GET_USERS\", state);\n      new RestAPI().getUsers(action.dispatch);\n      return state;\n    }\n\n    default:\n      console.log(\"in reducer user.default\");\n      return state;\n  }\n};\n\nexport default users;\n"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AAEA,MAAMC,OAAO,GAAG,CACd;EACEC,EAAE,EAAE,EADN;EAEEC,IAAI,EAAE,OAFR;EAGEC,UAAU,EAAE,GAHd;EAIEC,UAAU,EAAE,KAJd;EAKEC,KAAK,EAAE;AALT,CADc,EAQd;EACEJ,EAAE,EAAE,EADN;EAEEC,IAAI,EAAE,OAFR;EAGEC,UAAU,EAAE,GAHd;EAIEC,UAAU,EAAE,KAJd;EAKEC,KAAK,EAAE;AALT,CARc,EAed;EACEJ,EAAE,EAAE,EADN;EAEEC,IAAI,EAAE,MAFR;EAGEC,UAAU,EAAE,GAHd;EAIEC,UAAU,EAAE,KAJd;EAKEC,KAAK,EAAE;AALT,CAfc,CAAhB;;AAwBA,MAAMC,KAAK,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BP,OAA0B;EAAA,IAAjBQ,MAAiB;EAAA,IAATC,IAAS;;EAC/C,QAAQD,MAAM,CAACE,IAAf;IACE,KAAK,UAAL;MAAiB;QACfC,OAAO,CAACC,GAAR,CAAY,0BAAZ;QACA,IAAIC,UAAU,GAAGN,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAU;UACtC,IAAIA,IAAI,CAACd,EAAL,KAAYO,MAAM,CAACO,IAAP,CAAYd,EAA5B,EAAgC;YAC9B,OAAO,KAAP;UACD,CAFD,MAEO;YACL,OAAO,IAAP;UACD;QACF,CANgB,CAAjB;QAOA,IAAIe,QAAQ,GAAG,CAAC,GAAGH,UAAJ,EAAgBI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,MAAM,CAACO,IAAzB,CAAhB,CAAf;QACAJ,OAAO,CAACC,GAAR,CACE,yCAAyCO,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAD3C;QAGA,OAAOA,QAAP;MACD;;IAED,KAAK,aAAL;MAAoB;QAClBL,OAAO,CAACC,GAAR,CAAY,8BAAZ;QACA,IAAIC,UAAU,GAAGN,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAU;UACtC,IAAIA,IAAI,CAACd,EAAL,KAAYO,MAAM,CAACO,IAAP,CAAYd,EAA5B,EAAgC;YAC9B,OAAO,KAAP;UACD,CAFD,MAEO;YACL,OAAO,IAAP;UACD;QACF,CANgB,CAAjB;QAOA,IAAIe,QAAQ,GAAG,CAAC,GAAGH,UAAJ,CAAf;QACAF,OAAO,CAACC,GAAR,CACE,6CAA6CO,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAD/C;QAGA,OAAOA,QAAP;MACD;;IAED,KAAK,oBAAL;MAA2B;QACzBL,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDJ,MAAM,CAACF,KAA1D;QACA,IAAIU,QAAQ,GAAG,CAAC,GAAGR,MAAM,CAACF,KAAX,CAAf;QACA,OAAOU,QAAP;MACD;;IAED,KAAK,WAAL;MAAkB;QAChBL,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CL,KAA1C;QACA,IAAIR,OAAJ,GAAcsB,QAAd,CAAuBb,MAAM,CAACc,QAA9B;QACA,OAAOf,KAAP;MACD;;IAED;MACEI,OAAO,CAACC,GAAR,CAAY,yBAAZ;MACA,OAAOL,KAAP;EA/CJ;AAiDD,CAlDD;;AAoDA,eAAeD,KAAf"},"metadata":{},"sourceType":"module"}