{"ast":null,"code":"import RestAPI from '../rest';\nlet initial = {\n  username: \"\",\n  password: \"\",\n  mode: \"login\",\n  loginstate: \"initial\"\n};\nconst savedState = sessionStorage.getItem('loginState');\n\nif (savedState != null) {\n  initial = Object.assign({}, initial, JSON.parse(savedState));\n}\n\nconst appState = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let data = arguments.length > 2 ? arguments[2] : undefined;\n  console.log(\"in login reducer action.type:\" + action.type);\n\n  switch (action.type) {\n    case 'SET_REGISTRATION_MODE':\n      {\n        let mode = {\n          \"mode\": 'register'\n        };\n        let fields = {\n          \"username\": \"\",\n          \"email\": \"\",\n          \"password\": \"\"\n        };\n        let new_state = Object.assign({}, state, mode, fields);\n        return new_state;\n      }\n\n    case 'REGISTER_USER':\n      {\n        console.log(\"login.REGISTER_USER: \");\n        new RestAPI().registerUser(action.dispatch, action.username, action.password, action.email);\n        let mode = {\n          \"mode\": 'login'\n        };\n        let new_state = Object.assign({}, state, mode);\n        return new_state;\n      }\n\n    case 'LOGIN_TO_APP':\n      {\n        // drc\n        let newState = {\n          username: action.username,\n          password: action.password,\n          loginstate: action.loginstate,\n          mode: 'login'\n        }; // let newState = {username: action.username, password:action.password, loginstate:'logged-in', mode: 'login' };\n\n        console.log(\"in LOGIN_TO_APP\");\n        console.log(\"login.LOGIN_TO_APP: \" + JSON.stringify(newState)); // drc\n\n        new RestAPI().loginUser(action.dispatch, action.username, action.password);\n        sessionStorage.setItem('loginState', JSON.stringify(newState));\n        return Object.assign({}, newState);\n      }\n\n    case 'LOG_OUT':\n      {\n        let newState = {\n          username: 'none',\n          password: '',\n          loginstate: 'logged-out',\n          mode: 'login'\n        };\n        console.log(\"in LOG_OUT\");\n        console.log(\"login.LOG_OUT: \" + JSON.stringify(newState));\n        return Object.assign({}, newState);\n      }\n\n    case 'LOGIN_SUCCESS':\n      {\n        // update state with token and login status\n        let loginstate = 'logged-in';\n        const obj = Object.assign({}, state, {\n          loginstate\n        });\n        return obj;\n      }\n\n    case 'LOGIN_FAILED':\n      {\n        // update state with token and login status\n        alert(\"login failed!\");\n        let loginstate = 'login-failed';\n        let mode = \"login\";\n        const obj = Object.assign({}, state, {\n          loginstate,\n          mode\n        });\n        return obj;\n      }\n\n    case 'UPDATE_LOGIN_FORM_OBJECT':\n      {\n        console.log(\"in reducer login.UPDATE_LOGIN_FORM_OBJECT\");\n        let field = {};\n        field[action.field_name] = action.field_value;\n        const obj = Object.assign({}, state, field);\n        console.log(\"login.UPDATE_LOGIN_FORM_OBJECT: \" + JSON.stringify(obj));\n        return obj;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default appState;","map":{"version":3,"names":["RestAPI","initial","username","password","mode","loginstate","savedState","sessionStorage","getItem","Object","assign","JSON","parse","appState","state","action","data","console","log","type","fields","new_state","registerUser","dispatch","email","newState","stringify","loginUser","setItem","obj","alert","field","field_name","field_value"],"sources":["/home/wasadmin/project/tldp-client-react/src/reducers/login.js"],"sourcesContent":["import RestAPI from '../rest';\nlet initial = {username:\"\", password:\"\", mode: \"login\", loginstate: \"initial\" };\nconst savedState = sessionStorage.getItem('loginState');\nif(savedState != null){\n    initial = Object.assign({}, initial, JSON.parse(savedState));\n}\n\n\nconst appState = (state = initial, action, data) => {\n    console.log(\"in login reducer action.type:\" + action.type );\n\n    switch (action.type) {\n\n    case 'SET_REGISTRATION_MODE':{\n        let mode = {\"mode\":'register'};\n        let fields = {\"username\":\"\", \"email\": \"\", \"password\": \"\"};\n        let new_state = Object.assign({}, state, mode, fields);\n        return new_state;\n    }\n\n    case 'REGISTER_USER': {\n        console.log( \"login.REGISTER_USER: \");\n        new RestAPI().registerUser(action.dispatch, action.username, action.password, action.email);\n        let mode = {\"mode\":'login'};\n        let new_state = Object.assign({}, state, mode);\n        return new_state;\n    }\n\n    case 'LOGIN_TO_APP': {\n        // drc\n        let newState = {username: action.username, password:action.password, loginstate: action.loginstate, mode: 'login' };\n        // let newState = {username: action.username, password:action.password, loginstate:'logged-in', mode: 'login' };\n        console.log(\"in LOGIN_TO_APP\");\n        console.log( \"login.LOGIN_TO_APP: \" + JSON.stringify(newState));\n        // drc\n        new RestAPI().loginUser(action.dispatch, action.username, action.password);\n        sessionStorage.setItem('loginState', JSON.stringify(newState));\n        return  Object.assign({}, newState);\n    }\n\n    case 'LOG_OUT': {\n        let newState = {username: 'none', password:'', loginstate: 'logged-out', mode: 'login' };\n        console.log(\"in LOG_OUT\");\n        console.log( \"login.LOG_OUT: \" + JSON.stringify(newState));\n        return  Object.assign({}, newState);\n    }\n\n    case 'LOGIN_SUCCESS': {\n        // update state with token and login status\n        let loginstate = 'logged-in';\n        const obj = Object.assign({}, state, { loginstate });\n        return obj;\n    }\n    case 'LOGIN_FAILED': {\n        // update state with token and login status\n        alert(\"login failed!\");\n        let loginstate = 'login-failed';\n        let mode = \"login\";\n        const obj = Object.assign({}, state, { loginstate, mode });\n        return obj;\n    }\n\n    case 'UPDATE_LOGIN_FORM_OBJECT': {\n        console.log(\"in reducer login.UPDATE_LOGIN_FORM_OBJECT\");\n        let field = {};\n        field[action.field_name] = action.field_value;\n        const obj = Object.assign({}, state, field);\n        console.log( \"login.UPDATE_LOGIN_FORM_OBJECT: \" + JSON.stringify(obj));\n        return obj;\n      }\n    default:\n        return state\n    }\n}\n\nexport default appState\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}