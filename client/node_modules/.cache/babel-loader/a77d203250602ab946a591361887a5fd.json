{"ast":null,"code":"import RestAPI from '../rest';\nconst initial = [{\n  id: 100,\n  name: 'Brian',\n  email: 'brian@a.com'\n}, {\n  id: 101,\n  name: 'Scott',\n  email: 'scott@a.com'\n}, {\n  id: 102,\n  name: 'Jeff',\n  email: 'jeff@a.com'\n}];\n\nconst customers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let data = arguments.length > 2 ? arguments[2] : undefined;\n\n  switch (action.type) {\n    case 'ADD_CUSTOMER':\n      {\n        console.log(\"in reducer customer.ADD_CUSTOMER\");\n        let othercustomers = state.filter(customer => {\n          if (customer.id === action.customer.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        let newstate = [...othercustomers, Object.assign({}, action.customer)];\n        console.log(\"in reducer customer.ADD_CUSTOMER, newstate: \" + JSON.stringify(newstate));\n        return newstate;\n      }\n\n    case 'DELETE_CUSTOMER':\n      {\n        console.log(\"in reducer customers.DELETE_CUSTOMER\");\n        let othercustomers = state.filter(customer => {\n          if (customer.id === action.customer.id) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n        let newstate = [...othercustomers];\n        console.log(\"in reducer customers.DELETE_CUSTOMER, newstate: \" + JSON.stringify(newstate));\n        return newstate;\n      }\n\n    case 'APPLY_CUSTOMERS_UPDATE':\n      {\n        console.log(\"in reducer customers.APPLY_CUSTOMERS_UPDATE\", action.customers);\n        let newstate = [...action.customers];\n        return newstate;\n      }\n\n    case 'GET_CUSTOMERS':\n      {\n        console.log(\"in reducer customers.GET_CUSTOMERS\", state);\n        new RestAPI().getCustomers(action.dispatch);\n        return state;\n      }\n\n    default:\n      console.log(\"in reducer customer.default\");\n      return state;\n  }\n};\n\nexport default customers;","map":{"version":3,"names":["RestAPI","initial","id","name","email","customers","state","action","data","type","console","log","othercustomers","filter","customer","newstate","Object","assign","JSON","stringify","getCustomers","dispatch"],"sources":["/home/wasadmin/project/tldp-client-react/src/reducers/customers.js"],"sourcesContent":["import RestAPI from '../rest';\n\nconst initial = [{ id: 100, name: 'Brian', email: 'brian@a.com' },\n{ id: 101, name: 'Scott', email: 'scott@a.com' },\n{ id: 102, name: 'Jeff', email: 'jeff@a.com' }];\n\nconst customers = (state = initial, action, data) => {\n    switch (action.type) {\n\n        case 'ADD_CUSTOMER': {\n            console.log(\"in reducer customer.ADD_CUSTOMER\");\n            let othercustomers = state.filter(\n                customer => {\n                    if (customer.id === action.customer.id ) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }\n            );\n            let newstate = [...othercustomers, Object.assign({}, action.customer)]\n            console.log(\"in reducer customer.ADD_CUSTOMER, newstate: \" + JSON.stringify(newstate));\n            return newstate;\n        }\n\n        case 'DELETE_CUSTOMER': {\n            console.log(\"in reducer customers.DELETE_CUSTOMER\");\n            let othercustomers = state.filter(\n                (customer) => {\n                    if (customer.id === action.customer.id ) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }\n            );\n            let newstate = [...othercustomers]\n            console.log(\"in reducer customers.DELETE_CUSTOMER, newstate: \" + JSON.stringify(newstate));\n            return newstate;\n        }\n\n        case 'APPLY_CUSTOMERS_UPDATE': {\n            console.log(\"in reducer customers.APPLY_CUSTOMERS_UPDATE\", action.customers);\n            let newstate = [...action.customers];\n            return newstate;\n        }\n\n        case 'GET_CUSTOMERS': {\n            console.log(\"in reducer customers.GET_CUSTOMERS\", state);\n            new RestAPI().getCustomers(action.dispatch);\n            return state;\n        }\n\n        default:\n            console.log(\"in reducer customer.default\");\n            return state\n    }\n}\n\nexport default customers"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AAEA,MAAMC,OAAO,GAAG,CAAC;EAAEC,EAAE,EAAE,GAAN;EAAWC,IAAI,EAAE,OAAjB;EAA0BC,KAAK,EAAE;AAAjC,CAAD,EAChB;EAAEF,EAAE,EAAE,GAAN;EAAWC,IAAI,EAAE,OAAjB;EAA0BC,KAAK,EAAE;AAAjC,CADgB,EAEhB;EAAEF,EAAE,EAAE,GAAN;EAAWC,IAAI,EAAE,MAAjB;EAAyBC,KAAK,EAAE;AAAhC,CAFgB,CAAhB;;AAIA,MAAMC,SAAS,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BL,OAA0B;EAAA,IAAjBM,MAAiB;EAAA,IAATC,IAAS;;EACjD,QAAQD,MAAM,CAACE,IAAf;IAEI,KAAK,cAAL;MAAqB;QACjBC,OAAO,CAACC,GAAR,CAAY,kCAAZ;QACA,IAAIC,cAAc,GAAGN,KAAK,CAACO,MAAN,CACjBC,QAAQ,IAAI;UACR,IAAIA,QAAQ,CAACZ,EAAT,KAAgBK,MAAM,CAACO,QAAP,CAAgBZ,EAApC,EAAyC;YACrC,OAAO,KAAP;UACH,CAFD,MAEO;YACH,OAAO,IAAP;UACH;QACJ,CAPgB,CAArB;QASA,IAAIa,QAAQ,GAAG,CAAC,GAAGH,cAAJ,EAAoBI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,MAAM,CAACO,QAAzB,CAApB,CAAf;QACAJ,OAAO,CAACC,GAAR,CAAY,iDAAiDO,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAA7D;QACA,OAAOA,QAAP;MACH;;IAED,KAAK,iBAAL;MAAwB;QACpBL,OAAO,CAACC,GAAR,CAAY,sCAAZ;QACA,IAAIC,cAAc,GAAGN,KAAK,CAACO,MAAN,CAChBC,QAAD,IAAc;UACV,IAAIA,QAAQ,CAACZ,EAAT,KAAgBK,MAAM,CAACO,QAAP,CAAgBZ,EAApC,EAAyC;YACrC,OAAO,KAAP;UACH,CAFD,MAEO;YACH,OAAO,IAAP;UACH;QACJ,CAPgB,CAArB;QASA,IAAIa,QAAQ,GAAG,CAAC,GAAGH,cAAJ,CAAf;QACAF,OAAO,CAACC,GAAR,CAAY,qDAAqDO,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAjE;QACA,OAAOA,QAAP;MACH;;IAED,KAAK,wBAAL;MAA+B;QAC3BL,OAAO,CAACC,GAAR,CAAY,6CAAZ,EAA2DJ,MAAM,CAACF,SAAlE;QACA,IAAIU,QAAQ,GAAG,CAAC,GAAGR,MAAM,CAACF,SAAX,CAAf;QACA,OAAOU,QAAP;MACH;;IAED,KAAK,eAAL;MAAsB;QAClBL,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDL,KAAlD;QACA,IAAIN,OAAJ,GAAcoB,YAAd,CAA2Bb,MAAM,CAACc,QAAlC;QACA,OAAOf,KAAP;MACH;;IAED;MACII,OAAO,CAACC,GAAR,CAAY,6BAAZ;MACA,OAAOL,KAAP;EAhDR;AAkDH,CAnDD;;AAqDA,eAAeD,SAAf"},"metadata":{},"sourceType":"module"}